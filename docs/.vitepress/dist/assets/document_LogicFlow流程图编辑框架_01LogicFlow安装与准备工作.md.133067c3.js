import{_ as s,o as a,c as l,X as o}from"./chunks/framework.7a10e803.js";const C=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"document/LogicFlow流程图编辑框架/01LogicFlow安装与准备工作.md","filePath":"document/LogicFlow流程图编辑框架/01LogicFlow安装与准备工作.md","lastUpdated":1692946053000}'),n={name:"document/LogicFlow流程图编辑框架/01LogicFlow安装与准备工作.md"},e=o(`<blockquote><p>LogicFlow 是一款流程图编辑框架，提供了一系列流程图交互、编辑所必需的功能和灵活的节点自定义、插件等拓展机制。LogicFlow支持前端研发自定义开发各种逻辑编排场景，如流程图、ER图、BPMN流程等。在工作审批配置、机器人逻辑编排、无代码平台流程配置都有较好的应用。</p></blockquote><p>这一节将讲解快速上手 LogicFlow 流程图编辑框架的准备工作，项目整体基于<a href="https://1024code.com/codecubes/0z9xIZl" target="_blank" rel="noreferrer">Vue3+Vite3+Ts4</a>开发，为帮助还为熟练使用 Vue3 和 Typescript 语法的小伙伴提供便利，如果你已经很熟练在Vue3中的开发习惯，建议直接访问 <a href="http://logic-flow.org/" target="_blank" rel="noreferrer">LogicFlow</a> 将获取完整的入门指南。</p><h2 id="_1-初始化项目" tabindex="-1">1. 初始化项目： <a class="header-anchor" href="#_1-初始化项目" aria-label="Permalink to &quot;1. 初始化项目：&quot;">​</a></h2><ul><li>（1）如果你在本地初始化项目，你可以直接使用 <code>npm create vite</code> 创建，并选择 <code>Vue</code> 框架及 <code>TypeScript</code> 变体;</li><li>（2）如果你使用的是<strong>1024code</strong>在线编写代码，可以直接克隆 <a href="https://1024code.com/codecubes/0z9xIZl" target="_blank" rel="noreferrer">【项目模板】Vue3+Vite3+Ts4</a>得到一个项目模板；</li></ul><h2 id="_2-安装logicflow核心依赖" tabindex="-1">2. 安装LogicFlow核心依赖： <a class="header-anchor" href="#_2-安装logicflow核心依赖" aria-label="Permalink to &quot;2. 安装LogicFlow核心依赖：&quot;">​</a></h2><p>在项目根目录执行 <code>npm i @logicflow/core</code> 安装lf的核心模块；如果你使用<strong>1024code</strong>在线编写代码，在右侧的Shell标签页就是你执行安装命令的地方了；</p><h2 id="_3-初始化目录及容器" tabindex="-1">3. 初始化目录及容器： <a class="header-anchor" href="#_3-初始化目录及容器" aria-label="Permalink to &quot;3. 初始化目录及容器：&quot;">​</a></h2><ul><li>（1）移除项目中不需要用到的目录（<code>components/HelloWorld.vue</code>）以及在<code>App.vue</code>中的引用；</li><li>（2）为LF渲染提供渲染的容器（区域），并为容器设置一个固定的宽高属性：</li></ul><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">ref</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">container</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">container</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">container</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">width</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">500px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">height</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">400px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h2 id="_4-导入lf核心模块和默认样式文件" tabindex="-1">4. 导入LF核心模块和默认样式文件： <a class="header-anchor" href="#_4-导入lf核心模块和默认样式文件" aria-label="Permalink to &quot;4. 导入LF核心模块和默认样式文件：&quot;">​</a></h2><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> LogicFlow </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">@logicflow/core</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">@logicflow/core/dist/style/index.css</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span></code></pre></div><h2 id="_5-声明lf和容器对象并在挂在时初始化" tabindex="-1">5. 声明LF和容器对象并在挂在时初始化： <a class="header-anchor" href="#_5-声明lf和容器对象并在挂在时初始化" aria-label="Permalink to &quot;5. 声明LF和容器对象并在挂在时初始化：&quot;">​</a></h2><ul><li>声明container容器对象；</li><li>声明lf对象；</li><li>实例化lf对象并在选项中绑定容器对象，为了更明显的看到渲染效果这里专门开启的 <code>grid</code> 选项；</li></ul><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 声明容器的对应ref对象和LF对象</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> container </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">ref</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> lf </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">ref</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">LogicFlow</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">onMounted</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">lf</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">value</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">new</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">LogicFlow</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 通过选项指定了渲染的容器和需要显示网格</span></span>
<span class="line"><span style="color:#F07178;">    container</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">container</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">value</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">    grid</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">lf</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">value</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">render</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span></code></pre></div><h2 id="_6-运行项目" tabindex="-1">6. 运行项目 <a class="header-anchor" href="#_6-运行项目" aria-label="Permalink to &quot;6. 运行项目&quot;">​</a></h2><p>本地搭建的项目就执行 <code>npm run dev</code> 启动了，如果你要是使用的是<strong>1024code</strong>在线编写代码，那么在界面顶部的运行按钮点击后将开始启动项目，如果没有任何的报错信息，那么恭喜你项目成功运行好了。</p><h2 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结&quot;">​</a></h2><p>这一节的内容就到此结束了，各位小伙伴的项目都运行起来了吗？没有的话要赶紧联系我了，因为后面的案例都将基于第一节的准备工作进行了，加油，各位小伙伴。</p>`,19),p=[e];function t(c,r,i,F,y,D){return a(),l("div",null,p)}const A=s(n,[["render",t]]);export{C as __pageData,A as default};
